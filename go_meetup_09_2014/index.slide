Go in production
9 Sep 2014

Lukasz Krystkowiak
Zendesk
lukasz@zendesk.com

* Intro
What I've learned about writing and deploying Go applications in the last 4 months.

* Configuration
Extract configuration from the environment with `os.Getenv` and `godotenv`

.code .env
.play configuration.go /^func main/,/^}/

* Internal packages
.code internal-packages-maestro
.code internal-packages

* Dependency management
- go get
- _vendor dir
- godep

* _vendor dir
- copy files from the clone (or use git subtrees)
- go tool ignores it when doing e.g. go test ./...
- keep it like GOPATH, e.g. _vendor/src/github.com/user/dep
- prepend _vendor to an existing GOPATH

* godep
Command godep helps build packages reproducibly by fixing their dependencies.

* godep save ./...
- save a list of dependencies to the file Godeps/Godeps.json

.code Godeps

* godep save ./...
- copy their source code into Godeps/_workspace
.code tree

* godep update
- go get -u github.com/zendesk/go-httpclerk
- godep update github.com/zendesk/go-httpclerk

* Building and deploying
- build a binary on each application servers,
- build a binary on a single server and make application servers to fetch it

* Building and deploying
- install godep
.code godep-install

- build a binary
.code maestro-build

* Graceful shutdown
Manners allows you to shut your Go webserver down gracefully, without dropping any requests.

.code manners.go /^func main/,/true\n^}/

* Links
http://peter.bourgon.org/go-in-production/ - Go in production in Soundcloud
godep - https://github.com/braintree/manners
manners - https://github.com/braintree/manners
dotenv - https://github.com/braintree/manners
